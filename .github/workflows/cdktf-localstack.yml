name: Deploy to LocalStack with CDKTF

on:
  push:
    branches: [main]

jobs:
  deploy-localstack:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g cdktf-cli@0.20.0

      - name: Start LocalStack
        run: |
          docker-compose up -d
          echo "Waiting for LocalStack to start..."
          while ! curl -s http://localhost:4566/_localstack/health | grep -q '"lambda": "running"'; do
            sleep 5
          done
          echo "âœ… LocalStack ready"

      - name: Set AWS ENV for LocalStack
        run: |
          echo "AWS_ACCESS_KEY_ID=test" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=test" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
          echo "AWS_ENDPOINT_URL=http://localhost:4566" >> $GITHUB_ENV

      # Si necesitas compilar zips de Lambda
      # - name: Prepare Lambda zips
      #   run: npm run package-lambdas

      - name: Build CDKTF project
        run: npm run build

      - name: Synthesize CDKTF
        run: npm run synth

      - name: Deploy to LocalStack
        run: cdktf deploy --auto-approve

      - name: Verify deployed resources
        run: |
          docker exec localstack_main awslocal lambda list-functions
          docker exec localstack_main awslocal s3 ls
          docker exec localstack_main awslocal dynamodb list-tables
          docker exec localstack_main awslocal sns list-topics
          docker exec localstack_main awslocal sqs list-queues

      - name: Destroy stack
        if: always()
        run: cdktf destroy --auto-approve

      - name: Clean up environment
        if: always()
        run: |
          docker-compose down -v
          rm -rf .cdktf cdktf.out
