name: Deploy to LocalStack with CDKTF

on:
  push:
    branches: [main]

jobs:
  deploy-localstack:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      # ✅ Clonar el repo
      - name: Checkout code
        uses: actions/checkout@v4

      # ✅ Node.js con cache de npm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      # ✅ Instalar dependencias y CDKTF CLI
      - name: Install dependencies
        run: |
          npm ci
          npm install -g cdktf-cli@0.20.0

      # ✅ Instalar docker-compose v2 manualmente
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      # ✅ Levantar LocalStack con tu docker-compose.yml
      - name: Start LocalStack
        run: |
          docker-compose up -d
          echo "Waiting for LocalStack to be ready..."
          # Esperar a que LocalStack esté listo
          for i in {1..30}; do
            if docker exec localstack_main awslocal iam list-roles >/dev/null 2>&1; then
              break
            fi
            echo "Waiting for LocalStack to be ready..."
            sleep 2
          done
          if [ $? -ne 0 ]; then
            echo "LocalStack did not start in time"
            exit 1
          fi
          echo "✅ LocalStack ready"

      # ✅ Exportar credenciales dummy para LocalStack
      - name: Set AWS ENV for LocalStack
        run: |
          echo "AWS_ACCESS_KEY_ID=test" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=test" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
          echo "AWS_ENDPOINT_URL=http://localhost:4566" >> $GITHUB_ENV

      - name: Generate providers
        run: cdktf get

      # ✅ Compilar proyecto
      - name: Build CDKTF project
        run: npm run build

      # ✅ Generar archivos Terraform
      - name: Synthesize CDKTF
        run: npm run synth

      # ✅ Deploy
      - name: Deploy to LocalStack
        run: cdktf deploy --auto-approve

      # ✅ Verificar que se crearon los recursos
      - name: Verify deployed resources
        run: |
          docker exec localstack_main awslocal lambda list-functions
          docker exec localstack_main awslocal s3 ls
          docker exec localstack_main awslocal dynamodb list-tables
          docker exec localstack_main awslocal sns list-topics
          docker exec localstack_main awslocal sqs list-queues

      # ✅ Limpiar el entorno (solo si querés dejar limpio)
      - name: Destroy stack
        if: always()
        run: cdktf destroy --auto-approve

      - name: Clean up environment
        if: always()
        run: |
          docker-compose down -v
          rm -rf .cdktf cdktf.out
