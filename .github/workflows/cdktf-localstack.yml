name: Deploy to LocalStack with CDKTF

on:
  push:
    branches: [main]

jobs:
  deploy-localstack:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm install -g cdktf-cli@0.21.0

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Start LocalStack
        run: |
          docker-compose up -d
          echo "Waiting for LocalStack to be ready..."
          for i in {1..30}; do
            if docker exec localstack_main awslocal iam list-roles >/dev/null 2>&1; then
              break
            fi
            echo "Waiting for LocalStack to be ready..."
            sleep 2
          done
          if [ $? -ne 0 ]; then
            echo "LocalStack did not start in time"
            exit 1
          fi
          echo "✅ LocalStack ready"

      # Configuración completa de variables (¡ACTUALIZADA!)
      - name: Set LocalStack environment
        run: |
          echo "ACCOUNT=000000000000" >> $GITHUB_ENV
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY_ID=test" >> $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY=test" >> $GITHUB_ENV
          echo "AWS_ENDPOINT=http://localhost:4566" >> $GITHUB_ENV
          echo "DYNAMODB_ENDPOINT=http://localhost:4566" >> $GITHUB_ENV
          echo "SNS_ENDPOINT=http://localhost:4566" >> $GITHUB_ENV
          echo "S3_ENDPOINT=http://localhost:4566" >> $GITHUB_ENV
          echo "SES_ENDPOINT=http://localhost:4566" >> $GITHUB_ENV
          echo "EMAIL_FROM=no-reply@demo.com" >> $GITHUB_ENV

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7.5
          terraform_wrapper: false  # Clave para evitar el error anterior

      - name: Add Terraform to PATH
        run: |
          echo "$(dirname $(which terraform))" >> $GITHUB_PATH

      - name: Generate providers
        run: cdktf get

      - name: Build CDKTF project
        run: cdktf synth

      - name: Synthesize CDKTF
        run: npm run diff

      - name: Deploy to LocalStack
        run: cdktf deploy --auto-approve

      - name: Verify deployed resources
        run: |
          docker exec localstack_main awslocal lambda list-functions
          docker exec localstack_main awslocal s3 ls
          docker exec localstack_main awslocal dynamodb list-tables
          docker exec localstack_main awslocal sns list-topics
          docker exec localstack_main awslocal sqs list-queues

      - name: Destroy stack
        if: always()
        run: cdktf destroy --auto-approve

      - name: Clean up environment
        if: always()
        run: |
          docker-compose down -v
          rm -rf .cdktf cdktf.out